# render.yaml â€” Sara AI Core (Final Phase 5B, Production-Ready)
version: "1"

services:
  - name: sara-ai-redis
    type: redis
    plan: standard
    maxmemoryPolicy: allkeys-lru

  - name: sara-ai-core-app
    type: web
    env: python
    plan: standard
    region: oregon
    buildCommand: pip install -r requirements.txt
    startCommand: >
      gunicorn -k uvicorn.workers.UvicornWorker sara_ai.app:app --bind 0.0.0.0:$PORT --timeout 120
    envVars:
      - key: REDIS_URL
        fromService:
          name: sara-ai-redis
          type: redis
          property: connectionString
      - key: WORKER_QUEUE
        value: "sara-ai-core-queue"
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: LOG_LEVEL
        value: "info"
      - key: SENTRY_DSN
        sync: false
      - key: FLASK_ENV
        value: "production"

  - name: sara-ai-core-worker
    type: background
    env: python
    plan: standard
    region: oregon
    buildCommand: pip install -r requirements.txt
    startCommand: celery -A sara_ai.celery_app.celery worker --loglevel=INFO -Q sara-ai-core-queue --concurrency=2
    envVars:
      - key: REDIS_URL
        fromService:
          name: sara-ai-redis
          type: redis
          property: connectionString
      - key: WORKER_QUEUE
        value: "sara-ai-core-queue"
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: LOG_LEVEL
        value: "info"
      - key: SENTRY_DSN
        sync: false

  - name: sara-ai-core-streaming
    type: web
    env: python
    plan: standard
    region: oregon
    buildCommand: pip install -r requirements.txt
    # Run streaming as a web service bound to $PORT using Gunicorn
    startCommand: >
      gunicorn sara_ai.streaming_server:app --bind 0.0.0.0:$PORT --workers 2 --timeout 120
    envVars:
      - key: REDIS_URL
        fromService:
          name: sara-ai-redis
          type: redis
          property: connectionString
      - key: WORKER_QUEUE
        value: "sara-ai-core-queue"
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: LOG_LEVEL
        value: "info"
      - key: SENTRY_DSN
        sync: false

# Notes:
# - Removed static PORT environment variables: Render injects $PORT at runtime for web services.
# - Streaming server is run with Gunicorn so Render's port-scanner sees an open port.
# - Worker is a background service (Celery) so Render will not expect it to bind a port.
