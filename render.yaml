# ============================================================
# Render.yaml â€” Sara AI Production Deployment Configuration
# ============================================================

services:
  # --------------------------------------------------------
  # 1. Sara AI Core App (Flask + Gunicorn)
  # --------------------------------------------------------
  - name: sara-ai-core
    type: web
    env: docker
    plan: standard
    region: oregon
    dockerfilePath: ./Dockerfile
    buildCommand: ""
    startCommand: gunicorn -b 0.0.0.0:5000 sara_ai.app:app
    envVars:
      - key: REDIS_URL
        value: "redis://sara-ai-redis:6379/0"
      - key: CELERY_BROKER_URL
        value: "redis://sara-ai-redis:6379/0"
      - key: PORT
        value: "5000"
      - key: LOG_LEVEL
        value: "info"
      - key: SENTRY_DSN
        sync: false
      - key: OPENAI_API_KEY
        sync: false
    autoDeploy: true

  # --------------------------------------------------------
  # 2. Sara AI Celery Worker
  # --------------------------------------------------------
  - name: sara-ai-worker
    type: worker
    env: docker
    plan: standard
    region: oregon
    dockerfilePath: ./Dockerfile
    buildCommand: ""
    startCommand: celery -A sara_ai.celery_app.celery_app worker --loglevel=info
    envVars:
      - key: REDIS_URL
        value: "redis://sara-ai-redis:6379/0"
      - key: CELERY_BROKER_URL
        value: "redis://sara-ai-redis:6379/0"
      - key: LOG_LEVEL
        value: "info"
      - key: SENTRY_DSN
        sync: false
      - key: OPENAI_API_KEY
        sync: false
    autoDeploy: true

  # --------------------------------------------------------
  # 3. Redis (Primary Broker + Cache)
  # --------------------------------------------------------
  - name: sara-ai-redis
    type: redis
    plan: free
    region: oregon
    maxmemoryPolicy: allkeys-lru
    ipAllowList: []  # private access only
    disk:
      name: redis-data
      mountPath: /data

  # --------------------------------------------------------
  # 4. Grafana Agent (Prometheus + Loki Telemetry Exporter)
  # --------------------------------------------------------
  - name: sara-ai-agent
    type: web
    env: docker
    plan: standard
    region: oregon
    dockerfilePath: ./Dockerfile.agent
    buildCommand: ""
    startCommand: agent run --config.file=/etc/agent/config.yaml
    disk:
      name: agent-config
      mountPath: /etc/agent
    envVars:
      - key: GRAFANA_CLOUD_API_TOKEN
        sync: false
      - key: GRAFANA_CLOUD_REMOTE_WRITE_URL
        value: "https://prometheus-prod-36-prod-us-west-0.grafana.net/api/prom/push"
      - key: GRAFANA_CLOUD_INSTANCE
        value: "noblecomsolutions"
      - key: LOG_LEVEL
        value: "info"
      - key: PORT
        value: "10002"
    autoDeploy: true
