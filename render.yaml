# render.yaml â€” Sara AI Core (Phase 5B, Final Production Configuration)
# Defines all core services for Sara AI backend deployment on Render.

version: "1"

services:
  # --------------------------------------------------------
  # 1. Main Application API (Flask + Gunicorn + Uvicorn)
  # --------------------------------------------------------
  - type: web
    name: sara-ai-core-app
    env: python
    plan: standard
    region: oregon
    buildCommand: pip install -r requirements.txt
    startCommand: gunicorn -k uvicorn.workers.UvicornWorker sara_ai.app:app --bind 0.0.0.0:$PORT
    envVars:
      - key: REDIS_URL
        value: redis://red-d3ip3vodl3ps73dd24o0:6379/0
      - key: CELERY_BROKER_URL
        value: redis://red-d3ip3vodl3ps73dd24o0:6379/0
      - key: CELERY_RESULT_BACKEND
        value: redis://red-d3ip3vodl3ps73dd24o0:6379/1
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: PORT
        value: "10000"
    healthCheckPath: /health

  # --------------------------------------------------------
  # 2. Celery Worker (Background Processing)
  # --------------------------------------------------------
  - type: worker
    name: sara-ai-core-worker
    env: python
    plan: standard
    region: oregon
    buildCommand: pip install -r requirements.txt
    startCommand: celery -A sara_ai.celery_app worker --loglevel=info
    envVars:
      - key: REDIS_URL
        value: redis://red-d3ip3vodl3ps73dd24o0:6379/0
      - key: CELERY_BROKER_URL
        value: redis://red-d3ip3vodl3ps73dd24o0:6379/0
      - key: CELERY_RESULT_BACKEND
        value: redis://red-d3ip3vodl3ps73dd24o0:6379/1
      - key: PYTHONUNBUFFERED
        value: "1"

  # --------------------------------------------------------
  # 3. Streaming Server (WebSocket Media Stream)
  # --------------------------------------------------------
  - type: web
    name: sara-ai-core-streaming
    env: python
    plan: standard
    region: oregon
    buildCommand: pip install -r requirements.txt
    startCommand: python -m sara_ai.streaming_server
    envVars:
      - key: REDIS_URL
        value: redis://red-d3ip3vodl3ps73dd24o0:6379/0
      - key: CELERY_BROKER_URL
        value: redis://red-d3ip3vodl3ps73dd24o0:6379/0
      - key: CELERY_RESULT_BACKEND
        value: redis://red-d3ip3vodl3ps73dd24o0:6379/1
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: PORT
        value: "10000"
    healthCheckPath: /health

# --------------------------------------------------------
# 4. Redis (Key-Value Store)
# --------------------------------------------------------
databases:
  - name: sara-ai-redis
    plan: standard
    ipAllowList: []
    maxmemoryPolicy: allkeys-lru
