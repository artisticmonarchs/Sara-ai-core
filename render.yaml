# ================================================================
# render.yaml — Sara AI Core + Observability (Flow Mode)
# ================================================================

version: "1"

services:
  - name: sara-ai-redis
    type: redis
    plan: standard
    maxmemoryPolicy: allkeys-lru

  - name: sara-ai-core-app
    type: web
    env: python
    plan: standard
    region: oregon
    buildCommand: pip install -r requirements.txt
    startCommand: >
      gunicorn -k uvicorn.workers.UvicornWorker sara_ai.app:app --bind 0.0.0.0:$PORT
    envVars:
      - key: REDIS_URL
        fromService:
          name: sara-ai-redis
          type: redis
          property: connectionString
      - key: WORKER_QUEUE
        value: "sara-ai-core-queue"
      - key: LOG_LEVEL
        value: "info"
      - key: FLASK_ENV
        value: "production"
      - key: PORT
        fromDatabase: true

  - name: sara-ai-core-worker
    type: worker
    env: python
    plan: standard
    region: oregon
    buildCommand: pip install -r requirements.txt
    startCommand: >
      celery -A sara_ai.celery_app.celery_app worker --loglevel=info -Q sara-ai-core-queue
    envVars:
      - key: REDIS_URL
        fromService:
          name: sara-ai-redis
          type: redis
          property: connectionString
      - key: WORKER_QUEUE
        value: "sara-ai-core-queue"
      - key: LOG_LEVEL
        value: "info"

  - name: sara-ai-core-streaming
    type: web
    env: python
    plan: standard
    region: oregon
    buildCommand: pip install -r requirements.txt
    startCommand: python -m sara_ai.streaming_server
    envVars:
      - key: REDIS_URL
        fromService:
          name: sara-ai-redis
          type: redis
          property: connectionString
      - key: WORKER_QUEUE
        value: "sara-ai-core-queue"
      - key: LOG_LEVEL
        value: "info"
      - key: PORT
        fromDatabase: true

  # --------------------------------------------------------
  # Grafana Agent — Metrics + Logs (Flow mode)
  # --------------------------------------------------------
  - name: sara-ai-agent
    type: web
    env: docker
    plan: standard
    region: oregon
    # dockerfilePath must point to where Dockerfile.agent lives relative to repo root.
    dockerfilePath: ./Dockerfile.agent
    buildCommand: ""
    # Render will use this startCommand — DO NOT leave empty
    startCommand: /usr/bin/grafana-agent run --config.file=/etc/agent/config.river
    # NOTE: no disk mount by default — we copy config into image in Dockerfile.agent
    envVars:
      - key: GRAFANA_CLOUD_REMOTE_WRITE_URL
        value: "https://prometheus-prod-36-prod-us-west-0.grafana.net/api/prom/push"
      - key: GRAFANA_CLOUD_LOKI_URL
        value: "https://logs-prod-006.grafana.net/loki/api/v1/push"
      - key: GRAFANA_CLOUD_INSTANCE
        value: "noblecomsolutions"
      - key: GRAFANA_CLOUD_API_TOKEN
        fromDatabase: true
      - key: PORT
        fromDatabase: true
    autoDeploy: true
